<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Project">
    <!--프로젝트 객체에 들어갈 sql 결과값들-->
    <resultMap id="projectResultSet" type="Project">
        <id property="projectPk" column="project_pk"/>
        <result property="projectName" column="project_name"/>
        <result property="isImportant" column="is_important"/>
        <result property="projectTypePk" column="project_type_pk"/>
        <result property="projectRank" column="project_rank"/>
        <result property="projectManager" column="project_manager"/>
        <result property="deptNo" column="dept_no"/>
        <result property="startDate" column="start_date"/>
        <result property="endDate" column="end_date"/>
        <result property="detail" column="detail"/>
        <result property="remarks" column="remarks"/>
        <result property="status" column="status"/>
        <result property="templatePk" column="template_pk"/>
    </resultMap>

    <resultMap id="projectListResultSet" type="ProjectList">
        <id property="projectPk" column="project_pk"/>
        <result property="projectName" column="project_name"/>
        <result property="isImportant" column="is_important"/>
        <result property="projectTypePk" column="project_type_pk"/>
        <result property="projectTypeName" column="TYPE_NAME"/>
        <result property="projectRank" column="project_rank"/>
        <result property="projectManager" column="project_manager"/>
        <result property="projectManagerName" column="MEMBER_NAME"/>
        <result property="deptNo" column="dept_no"/>
        <result property="deptName" column="dept_name"/>
        <result property="startDate" column="start_date"/>
        <result property="endDate" column="end_date"/>
        <result property="status" column="status"/>
    </resultMap>

    <resultMap id="projectWorkListResultSet" type="ProjectWork">
        <id property="workNo" column="work_No"/>
        <result property="workName" column="work_name"/>
        <result property="status" column="status"/>
        <result property="projectNo" column="project_no"/>
        <result property="beginDate" column="begin_date"/>
        <result property="completeDate" column="complete_date"/>
        <result property="precedeNo" column="PRECEDE_NO"/>
        <result property="completeRate" column="complete_rate"/>
        <result property="grantorNo" column="grantor_no"/>
        <result property="workLevel" column="work_level"/>
        <result property="highWorkNo" column="high_work_no"/>
        <result property="memo" column="memo"/>
        <result property="workType" column="work_type"/>
        <result property="workStatus" column="work_status"/>
        <result property="memberName" column="MEMBER_NAME"/>
        <result property="memberNo" column="member_no"/>
        <result property="days" column="days"/>
    </resultMap>

    <resultMap id="projectTypeResultSet" type="ProjectType">
        <id property="typePk" column="type_pk"/>
        <result property="typeName" column="type_name"/>
    </resultMap>

    <resultMap type="Dept" id="deptResultSet">
        <id property="deptNo" column="DEPT_NO"/>
        <result property="deptName" column="DEPT_NAME"/>
        <result property="highDept" column="HIGH_DEPT"/>
        <result property="deptLevel" column="DEPT_LEVEL"/>
    </resultMap>

    <resultMap type="Template" id="templateResultSet">
        <id property="templatePk" column="TEMPLATE_PK"/>
        <result property="projectTypePk" column="PROJECT_TYPE_PK"/>
        <result property="memberPk" column="MEMBER_PK"/>
        <result property="templateName" column="TEMPLATE_NAME"/>
        <result property="detail" column="DETAIL"/>
        <result property="createDate" column="CREATE_DATE"/>
        <result property="editDate" column="EDIT_DATE"/>
    </resultMap>

    <resultMap type="DeptMember" id="deptMemberResultSet">
        <id property="memberNo" column="MEMBER_NO"/>
        <result property="memberId" column="MEMBER_ID"/>
        <result property="memberName" column="MEMBER_NAME"/>
        <result property="phone" column="PHONE"/>
        <result property="email" column="EMAIL"/>
        <result property="memberType" column="MEMBER_TYPE"/>
        <result property="rankNo" column="RANK_NAME"/>
        <result property="deptName" column="DEPT_NAME"/>
        <result property="enrollDate" column="ENROLL_DATE"/>
        <result property="modifyDate" column="MODIFY_DATE"/>
        <result property="status" column="STATUS"/>
    </resultMap>

    <resultMap type="ProjectTeam" id="projectTeamResultSet">
        <id property="teamPk" column="TEAM_PK"/>
        <result property="projectPk" column="PROJECT_PK"/>
        <result property="memberPk" column="MEMBER_PK"/>
        <result property="role" column="role"/>
        <result property="memberName" column="MEMBER_NAME"/>
        <result property="deptName" column="DEPT_NAME"/>
        <result property="rankName" column="RANK_NAME"/>
    </resultMap>

    <resultMap type="ProjectDetail" id="projectDetailResultSet">
        <id property="projectPk" column="PROJECT_PK"/>
        <result property="projectName" column="PROJECT_NAME"/>
        <result property="isImportant" column="IS_IMPORTANT"/>
        <result property="projectTypePk" column="PROJECT_TYPE_PK"/>
        <result property="projectTypeName" column="TYPE_NAME"/>
        <result property="projectRank" column="PROJECT_RANK"/>
        <result property="projectManager" column="PROJECT_MANAGER"/>
        <result property="managerName" column="MEMBER_NAME"/>
        <result property="deptNo" column="DEPT_NO"/>
        <result property="deptName" column="DEPT_NAME"/>
        <result property="startDate" column="START_DATE"/>
        <result property="endDate" column="END_DATE"/>
        <result property="detail" column="DETAIL"/>
        <result property="remarks" column="REMARKS"/>
        <result property="status" column="TEAMPLATE_PK"/>
        <result property="teamplatePk" column="status"/>
    </resultMap>
    <resultMap type="Member" id="memberResultSet">
        <id property="memberNo" column="MEMBER_NO"/>
        <result property="memberId" column="MEMBER_ID"/>
        <result property="memberPwd" column="PASSWORD"/>
        <result property="memberName" column="MEMBER_NAME"/>
        <result property="phone" column="PHONE"/>
        <result property="email" column="EMAIL"/>
        <result property="memberType" column="MEMBER_TYPE"/>
        <result property="rankNo" column="RANK_NO"/>
        <result property="rankName" column="RANK_NAME"/>
        <result property="deptNo" column="DEPT_NO"/>
        <result property="deptName" column="DEPT_NAME"/>
        <result property="projectPk" column="PROJECT_PK"/>
        <result property="enrollDate" column="ENROLL_DATE"/>
        <result property="changeName" column="CHANGE_NAME"/>
        <result property="ext" column="EXT"/>
        <result property="status" column="STATUS"/>
    </resultMap>
    <!--산출물과 관련파일-->
    <resultMap type="WorkProduct" id="workProductResultSet">
        <id property="memberNo" column="MEMBER_NO"/>
        <result property="productNo" column="PRODUCT_NO"/>
        <result property="workNo" column="WORK_NO"/>
        <result property="productType" column="PRODUCT_TYPE_E"/>
        <result property="productTitle" column="PRODUCT_TITLE"/>
        <result property="productContent" column="PRODUCT_CONTENT"/>
        <result property="enrollDate" column="ENROLL_DATE"/>
        <result property="modifyDate" column="MODIFY_DATE"/>
        <result property="atNo" column="AT_NO"/>
        <result property="division" column="division"/>
        <result property="originName" column="ORIGIN_NAME"/>
        <result property="changeName" column="CHANGE_NAME"/>
        <result property="filePath" column="FILE_PATH"/>
        <result property="ext" column="ext"/>
    </resultMap>

    <resultMap id="workHistoryResultSet" type="WorkHistory">
        <id property="workHistoryNo" column="WORK_HISTORY_NO"/>
        <result property="workNo" column="WORK_NO"/>
        <result property="status" column="status"/>
        <result property="memo" column="memo"/>
        <result property="modifyDate" column="MODIFY_DATE"/>
        <result property="projectTeamNo" column="PROJECT_TEAM_NO"/>
        <result property="rankName" column="RANK_NAME"/>
        <result property="deptName" column="DEPT_NAME"/>
        <result property="memberName" column="MEMBER_NAME"/>
    </resultMap>

    <!--부서목록-->
    <select id="selectDeptList" resultMap="deptResultSet">
        SELECT dept_no
             , dept_name
             , high_dept
             , dept_level
             , status
        FROM DEPT
        where status = 'Y'
    </select>

    <!--현역 사원목록-->
    <select id="selectActiveMember" parameterType="String" resultMap="deptMemberResultSet">
        SELECT member_no
             , member_id
             , password
             , member_name
             , phone
             , email
             , member_type
             , rank_no
             , dept_no
             , enroll_date
             , modify_date
             , status
        FROM MEMBER
        WHERE MEMBER_TYPE = '0'
          AND STATUS = 'Y'
          and DEPT_NO = #{deptNo}
    </select>

    <select id="selectProjectTypeList" resultMap="projectTypeResultSet">
        select *
        from project_type
    </select>

    <select id="selectProjectWorkList" resultMap="projectWorkListResultSet" parameterType="String">
        SELECT W.WORK_NO                    AS WORK_NO,
               W.WORK_NAME                  AS WORK_NAME,
               W.STATUS                     AS STATUS,
               W.PROJECT_NO                 AS PROJECT_NO,
               W.BEGIN_DATE                 AS BEGIN_DATE,
               W.COMPLETE_DATE              AS COMPLETE_DATE,
               W.PRECEDE_NO                 AS PRECEDE_NO,
               W.COMPLETE_RATE              AS COMPLETE_RATE,
               W.WORK_LEVEL                 AS WORK_LEVEL,
               W.HIGH_WORK_NO               AS HIGH_WORK_NO,
               W.WORK_TYPE                  AS WORK_TYPE,
               W.MEMBER_NO                  AS MEMBER_NO,
               W.WORK_STATUS                AS WORK_STATUS,
               M.MEMBER_NAME                AS MEMBER_NAME,
               M.MEMBER_TYPE                AS MEMBER_TYPE,
               (COMPLETE_DATE - BEGIN_DATE) AS DAYS
        FROM WORK W
                 JOIN MEMBER M ON W.MEMBER_NO = M.MEMBER_NO
        WHERE PROJECT_NO = #{value}
          AND WORK_TYPE = '프로젝트'
          AND WORK_STATUS = 'Y'
        ORDER BY BEGIN_DATE
    </select>

    <!--특정 프로젝트 작업의 하위작업으로 쓸 수 있는 작업목록-->
    <!--프로젝트 작업 중 지금 조회중인 작업을 제외한 목록.-->
    <select id="selectProjectHighWorkList" resultMap="projectWorkListResultSet" parameterType="java.util.HashMap">
        SELECT W.WORK_NO                    AS WORK_NO,
               W.WORK_NAME                  AS WORK_NAME,
               W.STATUS                     AS STATUS,
               W.PROJECT_NO                 AS PROJECT_NO,
               W.BEGIN_DATE                 AS BEGIN_DATE,
               W.COMPLETE_DATE              AS COMPLETE_DATE,
               W.PRECEDE_NO                 AS PRECEDE_NO,
               W.COMPLETE_RATE              AS COMPLETE_RATE,
               W.WORK_LEVEL                 AS WORK_LEVEL,
               W.HIGH_WORK_NO               AS HIGH_WORK_NO,
               W.WORK_TYPE                  AS WORK_TYPE,
               W.MEMBER_NO                  AS MEMBER_NO,
               W.WORK_STATUS                AS WORK_STATUS,
               M.MEMBER_NAME                AS MEMBER_NAME,
               M.MEMBER_TYPE                AS MEMBER_TYPE,
               (COMPLETE_DATE - BEGIN_DATE) AS DAYS
        FROM WORK W
                 JOIN MEMBER M ON W.MEMBER_NO = M.MEMBER_NO
        WHERE PROJECT_NO = #{pid}
          AND WORK_TYPE = '프로젝트'
          AND WORK_STATUS = 'Y'
          and WORK_NO != #{workNo}
        ORDER BY BEGIN_DATE
    </select>

    <select id="selectProjectWork" parameterType="String" resultMap="projectWorkListResultSet">
        select WORK_NAME,
               BEGIN_DATE,
               COMPLETE_DATE,
               COMPLETE_RATE,
               GRANTOR_NO,
               MEMO,
               HIGH_WORK_NO
        from WORK
        where WORK_NO = #{workNo}
    </select>

    <!--프로젝트 담당자 명단뽑기.-->
    <select id="selectProjectTeamList" parameterType="String" resultMap="projectTeamResultSet">
        SELECT T.TEAM_PK, PROJECT_PK, MEMBER_PK, ROLE, MEMBER_NAME, DEPT_NAME, RANK_NAME
        FROM PROJECT_TEAM T
                 JOIN (SELECT *
                       FROM MEMBER M
                                JOIN DEPT D ON M.DEPT_NO = D.DEPT_NO
                                JOIN RANK R2 ON M.RANK_NO = R2.RANK_NO) M ON T.MEMBER_PK = M.MEMBER_NO
        WHERE PROJECT_PK = #{value}
    </select>

    <!--프로젝트 담당 승인 자격자 명단뽑기.-->
    <select id="selectProjectTeamGrantorList" parameterType="String" resultMap="projectTeamResultSet">
        SELECT T.TEAM_PK, PROJECT_PK, MEMBER_PK, ROLE, MEMBER_NAME, DEPT_NAME, RANK_NAME
        FROM PROJECT_TEAM T
                 JOIN (SELECT *
                       FROM MEMBER M
                                JOIN DEPT D ON M.DEPT_NO = D.DEPT_NO
                                JOIN RANK R2 ON M.RANK_NO = R2.RANK_NO) M ON T.MEMBER_PK = M.MEMBER_NO
        WHERE (ROLE = 'PM' or ROLE = 'PL')
          and PROJECT_PK = #{value}
    </select>

    <!--프로젝트 작업 히스토리 목록 조회 -->
    <select id="selectWorkHistoryList" resultMap="workHistoryResultSet">
        select work_history_no
             , work_no
             , status
             , memo
             , modify_date
             , project_team_no
             , RANK_NAME
             , DEPT_NAME
             , MEMBER_NAME
        from WORK_HISTORY W
                 join (select *
                       from PROJECT_TEAM P
                                join (select MEMBER_NO
                                           , MEMBER_NAME
                                           , DEPT_NAME
                                           , RANK_NAME
                                      from MEMBER m
                                               join RANK R on m.RANK_NO = R.RANK_NO
                                               join DEPT D on m.DEPT_NO = D.DEPT_NO) M on P.MEMBER_PK = M.MEMBER_NO) PT
                      on W.PROJECT_TEAM_NO = PT.TEAM_PK
        where WORK_NO = #{workNo}
        order by MODIFY_DATE desc
    </select>

    <!--프로젝트 산출물 목록, 그리고 산출물의 파일도 출력-->
    <select id="selectWorkProductList" parameterType="String" resultMap="workProductResultSet">
        select WP.product_no,
               work_no,
               product_type,
               product_title,
               product_content,
               enroll_date,
               modify_date,
               A.AT_NO,
               DIVISION,
               ORIGIN_NAME,
               CHANGE_NAME,
               FILEPATH,
               EXT
        from WORK_PRODUCT WP
                 join ATTACHMENT A on wp.PRODUCT_NO = a.DIVISION
    </select>

    <!--프로젝트 등록을 했을 시 해당 프로젝트의 관리번호 반환 -->
    <select id="getSeq" resultType="String">
        select to_char(SEQ_PROJ.currval, 'FM000')
        from dual
    </select>

    <select id="selectWorkSeq" resultType="String">
        select 'W' || to_char(SEQ_WNO.currval, 'FM000')
        from dual
    </select>

    <!--모든 프로젝트 목록조회-->
    <!--Admin 용도임.-->
    <select id="selectProjectListAdmin" resultMap="projectListResultSet">
        SELECT P.PROJECT_PK      AS PROJECT_PK,
               P.PROJECT_NAME    AS PROJECT_NAME,
               P.IS_IMPORTANT    AS IS_IMPORTANT,
               P.PROJECT_TYPE_PK AS PROJECT_TYPE_PK,
               PT.TYPE_NAME      AS TYPE_NAME,
               P.PROJECT_RANK    AS PROJECT_RANK,
               P.PROJECT_MANAGER AS PROJECT_MANAGER,
               M.MEMBER_NAME     AS MEMBER_NAME,
               P.PROJECT_TYPE_PK AS PROJECT_TYPE_PK,
               P.DEPT_NO         AS DEPT_NO,
               D.DEPT_NAME       AS DEPT_NAME,
               P.START_DATE      AS START_DATE,
               P.END_DATE        AS END_DATE,
               P.STATUS          AS STATUS
        FROM PROJECT P
                 JOIN DEPT D ON P.DEPT_NO = D.DEPT_NO
                 JOIN PROJECT_TYPE PT ON P.PROJECT_TYPE_PK = PT.TYPE_PK
                 JOIN MEMBER M ON P.PROJECT_MANAGER = M.MEMBER_NO
    </select>
    <!--프로젝트 목록 조회. -->
    <!--loginUser 에 따라 다르게 간다.-->
    <select id="selectProjectList" parameterType="Member" resultMap="projectListResultSet">
        SELECT P.PROJECT_PK      AS PROJECT_PK,
               P.PROJECT_NAME    AS PROJECT_NAME,
               P.IS_IMPORTANT    AS IS_IMPORTANT,
               P.PROJECT_TYPE_PK AS PROJECT_TYPE_PK,
               PT.TYPE_NAME      AS TYPE_NAME,
               P.PROJECT_RANK    AS PROJECT_RANK,
               P.PROJECT_MANAGER AS PROJECT_MANAGER,
               T.MEMBER_PK       AS MEMBER_PK,
               T.MEMBER_NAME     AS MEMBER_NAME,
               P.PROJECT_TYPE_PK AS PROJECT_TYPE_PK,
               P.DEPT_NO         AS DEPT_NO,
               D.DEPT_NAME       AS DEPT_NAME,
               P.START_DATE      AS START_DATE,
               P.END_DATE        AS END_DATE,
               P.STATUS          AS STATUS
        FROM PROJECT P
                 JOIN DEPT D ON P.DEPT_NO = D.DEPT_NO
                 JOIN PROJECT_TYPE PT ON P.PROJECT_TYPE_PK = PT.TYPE_PK
                 JOIN (SELECT *
                       FROM PROJECT_TEAM
                                JOIN MEMBER M ON PROJECT_TEAM.MEMBER_PK = M.MEMBER_NO) T
                      ON P.PROJECT_PK = T.PROJECT_PK
        WHERE T.MEMBER_PK = #{memberNo}
          and P.STATUS = '1'
    </select>

    <!-- 프로젝트 전체목록 조회. -->
    <!-- 관리자 또는 이에 준하는 권한을 가진 사람은 모든걸 볼 수 있다.-->
    <select id="selectProjectListForAdmin" parameterType="Member" resultMap="projectListResultSet">
        SELECT P.PROJECT_PK      AS PROJECT_PK,
               P.PROJECT_NAME    AS PROJECT_NAME,
               P.IS_IMPORTANT    AS IS_IMPORTANT,
               P.PROJECT_TYPE_PK AS PROJECT_TYPE_PK,
               PT.TYPE_NAME      AS TYPE_NAME,
               P.PROJECT_RANK    AS PROJECT_RANK,
               P.PROJECT_MANAGER AS PROJECT_MANAGER,
               T.MEMBER_PK       AS MEMBER_PK,
               T.MEMBER_NAME     AS MEMBER_NAME,
               P.PROJECT_TYPE_PK AS PROJECT_TYPE_PK,
               P.DEPT_NO         AS DEPT_NO,
               D.DEPT_NAME       AS DEPT_NAME,
               P.START_DATE      AS START_DATE,
               P.END_DATE        AS END_DATE,
               P.STATUS          AS STATUS
        FROM PROJECT P
                 JOIN DEPT D ON P.DEPT_NO = D.DEPT_NO
                 JOIN PROJECT_TYPE PT ON P.PROJECT_TYPE_PK = PT.TYPE_PK
                 JOIN (SELECT *
                       FROM PROJECT_TEAM
                                JOIN MEMBER M ON PROJECT_TEAM.MEMBER_PK = M.MEMBER_NO) T
                      ON P.PROJECT_PK = T.PROJECT_PK
        WHERE P.STATUS = '1'
    </select>

    <select id="checkAdminStats" resultType="_int" parameterType="String">
        SELECT *
        FROM ACCESSGROUP A
                 JOIN ACCESS_MEMBER AM ON A.ACCESSGROUP_NO = AM.ACCESSGROUP_NO
        where A.ACCESSGROUP_NO = 'A015'
          and MEMBER_NO = #{value}
    </select>

    <!--모든 프로젝트 목록조회를 위한 총 목록 수-->
    <select id="getProjectListCount" resultType="_int">
        SELECT count(*)
        FROM PROJECT P
                 JOIN DEPT D ON P.DEPT_NO = D.DEPT_NO
                 JOIN PROJECT_TYPE PT ON P.PROJECT_TYPE_PK = PT.TYPE_PK
                 JOIN PROJECT_TEAM T ON P.PROJECT_PK = T.PROJECT_PK
        WHERE T.MEMBER_PK = P.PROJECT_MANAGER
    </select>

    <select id="selectTemplateList" resultMap="templateResultSet">
        select *
        from PROJECT_TEMPLATE
    </select>

    <select id="selectOutdatedWorks" parameterType="String" resultMap="projectWorkListResultSet">
        <![CDATA[
        select *
        from WORK
        WHERE to_date(sysdate) > COMPLETE_DATE
          and STATUS != '개발완료'
          and PROJECT_NO = #{value}
        ]]>
    </select>

    <update id="updateOutdatedWork" parameterType="String">
        update WORK
        set STATUS = '개발지연'
        where WORK_NO = #{value}
    </update>


    <select id="selectProjectTeamNo" parameterType="ProjectTeam" resultType="String">
        select TEAM_PK
        from PROJECT_TEAM
        where PROJECT_PK = #{projectPk}
          and MEMBER_PK = #{memberPk}
    </select>
    <insert id="insertWorkHistory" parameterType="WorkHistory">
        insert into WORK_HISTORY
        values ('WH' || to_char(SEQ_WH.NEXTVAL, 'FM000'),
                #{workNo}, #{status}, #{memo}, sysdate, #{projectTeamNo})
    </insert>

    <insert id="insertProjectWork" parameterType="ProjectWork">
        INSERT INTO WORK
        VALUES ('W' || to_char(SEQ_WNO.NEXTVAL, 'FM000'),
                #{workName}, #{status}, #{projectNo}, #{beginDate}, #{completeDate},
                #{precedeNo}, #{completeRate}, #{grantorNo}, #{workLevel}, #{highWorkNo},
                #{memo}, #{workType}, #{memberNo}, #{workStatus})
    </insert>

    <insert id="insertProject" parameterType="Project">
        insert into PROJECT
        values ('P' || to_char(SEQ_PROJ.nextval, 'FM000'), #{projectName},
                #{isImportant}, #{projectTypePk}, #{projectRank}, #{projectManager}, #{deptNo},
                #{startDate}, #{endDate}, #{detail}, #{remarks}, #{status}, #{templatePk})
    </insert>
    <insert id="insertProjectTeam" parameterType="ProjectTeam">
        insert into PROJECT_TEAM
        values ('PT' || to_char(SEQ_TEAM.nextval, 'FM000'), #{projectPk},
                #{memberPk}, #{role})
    </insert>

    <!--첨부파일 추가-->
    <insert id="insertAttachment" parameterType="Attachment">
        INSERT INTO ATTACHMENT
        VALUES ('AT' || TO_CHAR(SEQ_AT_NO.NEXTVAL, 'FM000'),
                #{division}, #{originName}, #{changeName}, #{filePath}, #{ext})
    </insert>


    <!-- 프로젝트 하나의 디테일 정보를 불러옴 -->
    <select id="selectOneProject" parameterType="java.lang.String" resultMap="projectDetailResultSet">
        SELECT P.PROJECT_PK
             , P.PROJECT_NAME
             , P.IS_IMPORTANT
             , P.PROJECT_TYPE_PK
             , PT.TYPE_NAME
             , P.PROJECT_RANK
             , P.PROJECT_MANAGER
             , M.MEMBER_NAME
             , P.DEPT_NO
             , D.DEPT_NAME
             , P.START_DATE
             , P.END_DATE
             , P.DETAIL
             , P.REMARKS
             , P.STATUS
             , P.TEAMPLATE_PK
        FROM PROJECT P
                 JOIN DEPT D ON (D.DEPT_NO = P.DEPT_NO)
                 JOIN MEMBER M ON (M.MEMBER_NO = P.PROJECT_MANAGER)
                 JOIN PROJECT_TYPE PT ON (PT.TYPE_PK = P.PROJECT_TYPE_PK)
        WHERE P.PROJECT_PK = #{pid}
    </select>

    <!-- 리소스 jsp용 by TW -->
    <select id="selectMemberListResource" parameterType="String" resultMap="memberResultSet">
        SELECT M.MEMBER_NAME
        ,M.MEMBER_NO
        ,R.RANK_NAME
        ,R.RANK_NO
        ,D.DEPT_NAME
        ,D.DEPT_NO
        FROM MEMBER M
        JOIN DEPT D ON(D.DEPT_NO = M.DEPT_NO)
        JOIN RANK R ON(R.RANK_NO = M.RANK_NO)
        WHERE 1 = 1
        <!-- WHERE M.MEMBER_TYPE = '0' -->
        AND M.STATUS = 'Y'
        AND D.DEPT_NO != 'S05'
        AND D.DEPT_NO = #{deptNo}
        <!-- <if test="deptNo = null">
            AND M.STATUS = 'Y'
          AND D.DEPT_NO != 'S05'
          AND D.DEPT_NO = #{deptNo}
        </if> -->
    </select>

    <!-- 리소스 추가  TW -->
    <insert id="insertResource" parameterType="Member">
        INSERT INTO PROJECT_TEAM
        VALUES ('PT' || TO_CHAR(SEQ_TEAM.NEXTVAL, 'FM000'),
                #{projectPk}, #{memberNo}, 'TM')
    </insert>

    <select id="teamMemberList" resultMap="memberResultSet">
        SELECT M.MEMBER_NAME
             , M.MEMBER_NO
             , D.DEPT_NAME
             , D.DEPT_NO
             , R.RANK_NAME
             , R.RANK_NO
             , P.PROJECT_PK
             , P.ROLE
        FROM MEMBER M
                 JOIN DEPT D ON (D.DEPT_NO = M.DEPT_NO)
                 JOIN RANK R ON (R.RANK_NO = M.RANK_NO)
                 JOIN PROJECT_TEAM P ON (P.MEMBER_PK = M.MEMBER_NO)
        WHERE M.STATUS = 'Y'
          AND P.ROLE = 'TM'
          AND P.PROJECT_PK = #{projectPk}
        ORDER BY D.DEPT_NAME
    </select>
</mapper>