<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Member">

	<resultMap type="Member" id="memberResultSet">
		<id property="memberNo" column="MEMBER_NO"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="memberPwd" column="PASSWORD"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
		<result property="memberType" column="MEMBER_TYPE"/>
		<result property="rankNo" column="RANK_NO"/>
		<result property="rankName" column="RANK_NAME"/>
		<result property="deptNo" column="DEPT_NO"/>
		<result property="deptName" column="DEPT_NAME"/>
		<result property="projectPk" column="PROJECT_PK"/>
		<result property="projectName" column="PROJECT_NAME"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="changeName" column="CHANGE_NAME"/>
		<result property="ext" column="EXT"/>
		<result property="status" column="STATUS"/>
	</resultMap>
	
	<resultMap type="Member" id="memberResultSet2">
		<id property="memberNo" column="MEMBER_NO"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="memberPwd" column="PASSWORD"/>
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
		<result property="memberType" column="MEMBER_TYPE"/>
		<result property="rankNo" column="RANK_NO"/>
		<result property="rankName" column="RANK_NAME"/>
		<result property="deptNo" column="DEPT_NO"/>
		<result property="deptName" column="DEPT_NAME"/>
		<result property="countProject" column="COUNT(P.PROJECT_PK)"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="status" column="STATUS"/>
	</resultMap>
	
	<resultMap type="Attachment" id="attachmentResultSet">
		<id property="atNo" column="AT_NO"/>
		<result property="division" column="DIVISION"/>
		<result property="originName" column="ORIGIN_NAME"/>
		<result property="changeName" column="CHANGE_NAME"/>
		<result property="filePath" column="FILEPATH"/>
		<result property="ext" column="EXT"/>
	</resultMap>
	
	<!-- <resultMap type="Customer" id="customerResultSet">
		<id property="customerNo" column="CUSTOMER_NO"/>
		<result property="customerName" column="CUSTOMER_NAME"/>
	</resultMap> -->
	
	
	<!-- <select id="loginCheck" resultMap="memberResultSet" parameterType="Member">
		SELECT *
		FROM MEMBER
		JOIN RANK R ON(M.RANK_NO = R.RANK_NO)
		WHERE MEMBER_ID = #{memberId}
		AND PASSWORD = #{memberPwd}
		AND STATUS = 'Y'
	</select> -->
	
	<select id="loginCheck" resultMap="memberResultSet" parameterType="Member">
		SELECT M.MEMBER_NO
		      ,M.MEMBER_ID
		      ,M.PASSWORD
		      ,M.MEMBER_NAME
		      ,M.PHONE
		      ,M.EMAIL
		      ,M.MEMBER_TYPE
		      ,M.RANK_NO
		      ,R.RANK_NAME
		      ,M.DEPT_NO
		      ,D.DEPT_NAME
		      ,M.ENROLL_DATE
		      ,M.MODIFY_DATE
		      ,M.STATUS
		FROM MEMBER M
		JOIN RANK R ON(M.RANK_NO = R.RANK_NO)
		JOIN DEPT D ON(D.DEPT_NO = M.DEPT_NO)
		WHERE M.MEMBER_ID = #{memberId}
		AND M.PASSWORD = #{memberPwd}
		AND M.STATUS = 'Y'
	</select>
	
	 
	<insert id="insertMember" parameterType="Member">
		INSERT INTO MEMBER
		VALUES ('M' || TO_CHAR(SEQ_MNO.NEXTVAL, 'FM000'), #{memberId}, #{memberPwd}, #{memberName}, #{phone}, #{email}, #{memberType}, #{rankNo}, #{deptNo}, SYSDATE, SYSDATE, 'Y')
	</insert>
	
	<select id="selectPwd" resultType="java.lang.String" parameterType="java.lang.String">
		SELECT PASSWORD
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
		AND STATUS = 'Y'
	</select>
	
	<select id="selectLoginUser" resultMap="memberResultSet" parameterType="Member">
		SELECT M.MEMBER_NO
            ,M.MEMBER_ID
            ,M.PASSWORD
            ,M.MEMBER_NAME
            ,M.PHONE
            ,M.EMAIL
            ,M.MEMBER_TYPE
            ,M.RANK_NO
            ,R.RANK_NAME
            ,M.DEPT_NO
            ,D.DEPT_NAME
            ,M.ENROLL_DATE
            ,M.MODIFY_DATE
            ,M.STATUS
            ,A.CHANGE_NAME
            ,A.EXT
        FROM MEMBER M
        JOIN RANK R ON(M.RANK_NO = R.RANK_NO)
        JOIN DEPT D ON(D.DEPT_NO = M.DEPT_NO)
        LEFT JOIN ATTACHMENT A ON(M.MEMBER_NO = A.DIVISION)
		WHERE M.MEMBER_ID = #{memberId}
		AND M.STATUS = 'Y'
	</select>
	
	
	<!-- 아이디 중복확인 -->
	<select id="checkMemberId" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	
	<!-- 회원정보수정 : 비밀번호 수정 -->
	<update id="updatePassword" parameterType="Member">
		UPDATE MEMBER
		SET(PASSWORD, MODIFY_DATE) = (SELECT #{memberPwd}, SYSDATE
									  FROM MEMBER
									  WHERE MEMBER_ID = #{memberId})
		WHERE MEMBER_ID = #{memberId}
	</update>
	
	<!-- 회원정보수정 : 이메일, 전화번호 수정 -->
	<update id="updateMemberInfo" parameterType="Member">
		UPDATE MEMBER
		SET(EMAIL, PHONE, MODIFY_DATE) = (SELECT #{email}, #{phone}, SYSDATE
										  FROM MEMBER
										  WHERE MEMBER_ID = #{memberId})
		WHERE MEMBER_ID = #{memberId}
	</update>
	
	<!-- 회원정보수정 : 프로필 이미지 등록 -->
	<insert id="insertProfileImage" parameterType="Attachment">
		INSERT INTO ATTACHMENT
		VALUES('AT'|| TO_CHAR(SEQ_AT_NO.NEXTVAL, 'FM000'), #{division}, #{originName}, #{changeName} , #{filePath}, #{ext})
	</insert>
	
	<!-- 회원정보 수정 : 프로필 이미지 수정 -->
	<update id="updateProfileImage" parameterType="Attachment">
		UPDATE ATTACHMENT 
		SET ORIGIN_NAME = #{originName}, CHANGE_NAME = #{changeName}, FILEPATH = #{filePath}, EXT = #{ext}
		WHERE DIVISION = #{division}
	</update>

	
	<select id="selectProfileImg" parameterType="Member" resultMap="attachmentResultSet">
		SELECT *
		FROM ATTACHMENT
		WHERE DIVISION = #{memberNo}
	</select>
	
	
	<!-- 멤버 리스트 조회 + 부서 + 프로젝트 같이 불러와야 함 -->
	<!-- join -->
	<select id="selectMemberList" resultMap="memberResultSet2">
		SELECT M.MEMBER_NO 
		      ,M.MEMBER_NAME
		      ,D.DEPT_NAME
		      ,R.RANK_NAME
		      ,COUNT(P.PROJECT_PK)
		      ,M.EMAIL
		      ,M.STATUS
		FROM MEMBER M
		JOIN DEPT D ON(M.DEPT_NO = D.DEPT_NO)
		JOIN RANK R ON(M.RANK_NO = R.RANK_NO)
		LEFT JOIN PROJECT_TEAM P ON(M.MEMBER_NO = P.MEMBER_PK)
		WHERE M.MEMBER_NAME != '관리자' 
		AND M.STATUS = 'Y'
		GROUP BY  M.MEMBER_NO 
		         ,M.MEMBER_NAME
		         ,D.DEPT_NAME
		         ,R.RANK_NAME
		         ,M.EMAIL
		         ,M.STATUS
		ORDER BY MEMBER_NO DESC
	</select>
	
	
	<!-- <select id="selectMemberList" resultMap="memberResultSet">
		SELECT MEMBER_NAME
			 , EMAIL
			 , STATUS
		FROM MEMBER
		WHERE MEMBER_NO != 'M001'
	</select> -->
	 
	 <!-- 페이징 리스트 count-->
	 <select id="memberListCount" resultType="_int">
	 	SELECT COUNT(*)
	 	FROM MEMBER
	 </select>
	 
	 <!-- memberList 이름으로 검색 -->
	 <select id="searchMemberName" resultMap="memberResultSet2">
	 	SELECT M.MEMBER_NO
		      ,M.MEMBER_NAME
		      ,D.DEPT_NAME
		      ,R.RANK_NAME
		      ,COUNT(P.PROJECT_PK)
		      ,M.EMAIL
		      ,M.STATUS
		FROM MEMBER M
		JOIN DEPT D ON(M.DEPT_NO = D.DEPT_NO)
		JOIN RANK R ON(M.RANK_NO = R.RANK_NO)
		LEFT JOIN PROJECT_TEAM P ON(M.MEMBER_NO = P.MEMBER_PK)
		WHERE M.MEMBER_NAME != '관리자' 
		  AND M.STATUS = 'Y'
		  AND M.MEMBER_NAME LIKE '%' || #{memberName} || '%'
		GROUP BY  M.MEMBER_NO 
		         ,M.MEMBER_NAME
		         ,D.DEPT_NAME
		         ,R.RANK_NAME
		         ,M.EMAIL
		         ,M.STATUS
		
	 </select>
	 
	<select id="selectProjectList" resultMap="memberResultSet">
		SELECT PROJECT_PK
			 , PROJECT_NAME
		FROM PROJECT
	</select>
	
	
	
	
	
	<!-- 고객사 테이블 insert -->
	<!-- <insert id="insertMember" parameterType="Member">
		INSERT INTO MEMBER
		VALUES ('M' || TO_CHAR(SEQ_MNO.NEXTVAL, 'FM000'), #{memberId}, #{memberPwd}, #{memberName}, #{phone}, #{email}, #{memberType}, #{rankNo}, #{deptNo}, SYSDATE, SYSDATE, 'Y')
	</insert> -->
	
	<insert id="insertCustomerTable" parameterType="Member">
		INSERT INTO CUSTOMER
		VALUES ('C' || TO_CHAR(SEQ_CUSTOMER.NEXTVAL, 'FM000'), #{memberName})
	</insert>
	
	<insert id="insertCustomer" parameterType="Member">
		INSERT INTO MEMBER
		VALUES ('C' || TO_CHAR(SEQ_MNO.NEXTVAL, 'FM000'), #{memberId}, #{memberPwd}, #{memberName}, #{phone}, #{email}, #{memberType}, NULL, NULL, SYSDATE, SYSDATE, 'Y')
	</insert>
	
	<select id="selectCurrval" resultType="java.lang.String" parameterType="java.lang.String">
		SELECT TO_CHAR(SEQ_MNO.CURRVAL, 'FM000')
		FROM DUAL
	</select>
	
    <insert id="insertCustomerProjectTeam" parameterType="Member">
        INSERT INTO PROJECT_TEAM
        VALUES ('PT' || TO_CHAR(SEQ_TEAM.NEXTVAL, 'FM000'),
                #{projectPk}, #{memberNo}, 'CM')
    </insert>
	
</mapper>










  